name: Test Suite (Disabled - Use CI workflow instead)

# Disabled to reduce CI overhead - tests now run in ci.yml
# on:
#   push:
#     branches: [ development ]
#   pull_request:
#     branches: [ main, development ]

on:
  workflow_dispatch:
    inputs:
      force_run:
        description: 'Force run this comprehensive test suite'
        required: true
        default: false
        type: boolean

jobs:
  test:
    if: github.event.inputs.force_run == 'true'
    runs-on: ubuntu-latest
    timeout-minutes: 60
    environment:
      name: ${{ vars.DCA_ENVIRONMENT_NAME != '' && vars.DCA_ENVIRONMENT_NAME || 'ci' }}
    env:
      PLAYWRIGHT_BROWSERS_PATH: ${{ runner.temp }}/ms-playwright

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure development environment
        if: ${{ github.ref == 'refs/heads/development' || github.base_ref == 'development' }}
        run: |
          echo "NODE_ENV=development" >> $GITHUB_ENV
          echo "DCA_DEV=true" >> $GITHUB_ENV

      - name: Export Mongo credentials (if provided)
        shell: bash
        run: |
          if [ -n "${{ secrets.MONGODB_URI }}" ]; then
            cat <<EOF >> "$GITHUB_ENV"
MONGODB_URI=${{ secrets.MONGODB_URI }}
EOF
          elif [ -n "${{ vars.MONGODB_URI }}" ]; then
            cat <<EOF >> "$GITHUB_ENV"
MONGODB_URI=${{ vars.MONGODB_URI }}
EOF
          fi

          if [ -n "${{ secrets.MONGODB_DB }}" ]; then
            cat <<EOF >> "$GITHUB_ENV"
MONGODB_DB=${{ secrets.MONGODB_DB }}
EOF
          elif [ -n "${{ vars.MONGODB_DB }}" ]; then
            cat <<EOF >> "$GITHUB_ENV"
MONGODB_DB=${{ vars.MONGODB_DB }}
EOF
          fi

          if [ -n "${{ secrets.MONGODB_TLS }}" ]; then
            cat <<EOF >> "$GITHUB_ENV"
MONGODB_TLS=${{ secrets.MONGODB_TLS }}
EOF
          elif [ -n "${{ vars.MONGODB_TLS }}" ]; then
            cat <<EOF >> "$GITHUB_ENV"
MONGODB_TLS=${{ vars.MONGODB_TLS }}
EOF
          fi

          if [ -n "${{ secrets.MONGODB_TLS_CA_BASE64 }}" ]; then
            cat <<EOF >> "$GITHUB_ENV"
MONGODB_TLS_CA_BASE64=${{ secrets.MONGODB_TLS_CA_BASE64 }}
EOF
          elif [ -n "${{ vars.MONGODB_TLS_CA_BASE64 }}" ]; then
            cat <<EOF >> "$GITHUB_ENV"
MONGODB_TLS_CA_BASE64=${{ vars.MONGODB_TLS_CA_BASE64 }}
EOF
          fi

      - name: Verify Mongo env (non-secret)
        shell: bash
        run: |
          if [ -n "$MONGODB_URI" ]; then
            echo "MONGODB_URI detected (length ${#MONGODB_URI})"
          else
            echo "MONGODB_URI missing"
          fi
          if [ -n "$MONGODB_DB" ]; then
            echo "MONGODB_DB detected"
          fi

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Prepare Playwright cache directory
        run: mkdir -p "$PLAYWRIGHT_BROWSERS_PATH"

      - name: Cache Playwright browsers
        id: playwright-cache
        uses: actions/cache@v4
        with:
          path: ${{ env.PLAYWRIGHT_BROWSERS_PATH }}
          key: ${{ runner.os }}-playwright-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-playwright-

      - name: Install Playwright browsers
        if: steps.playwright-cache.outputs.cache-hit != 'true'
        run: npx playwright install --with-deps

      - name: Inspect Playwright cache
        run: |
          echo "Playwright cache contents:" &&
          find "$PLAYWRIGHT_BROWSERS_PATH" -maxdepth 2 -type d -print

      - name: Run test suite
        run: npm test
        env:
          CI: true
          PLAYWRIGHT_BROWSERS_PATH: ${{ env.PLAYWRIGHT_BROWSERS_PATH }}

      - name: Upload Playwright report
        if: always() && hashFiles('playwright-report/**') != ''
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report-${{ matrix.node-version }}
          path: playwright-report/
          retention-days: 14
