{
  "name": "drawer-count-app",
  "version": "0.3.16",
  "description": "A minimal, installable PWA to help myself and coworkers count drawers at the end of the day.",
  "main": "src/index.html",
  "scripts": {
    "test": "cross-env DCA_SKIP_FULL_TEST=1 node tests/run-tests.js && npm run test:e2e",
    "test:unit": "node tests/run-tests.js",
    "test:unit:quick": "cross-env DCA_SKIP_FULL_TEST=1 node tests/run-tests.js",
    "test:e2e": "playwright test",
    "test:watch": "concurrently -n node,e2e -c blue,magenta \"chokidar \\\"tests/**/*.js\\\" \\\"scripts/**/*.js\\\" --ignore \\\"tests/e2e/**\\\" --ignore \\\"dist/**\\\" --ignore \\\"node_modules/**\\\" --ignore \\\"playwright-report/**\\\" --ignore \\\"test-results/**\\\" --initial --debounce 250 -c \\\"cross-env DCA_SKIP_FULL_TEST=1 node tests/run-tests.js\\\"\" \"chokidar \\\"src/**/*\\\" \\\"tests/e2e/**/*.{js,ts}\\\" playwright.config.js --ignore \\\"dist/**\\\" --ignore \\\"node_modules/**\\\" --ignore \\\"playwright-report/**\\\" --ignore \\\"test-results/**\\\" --initial --debounce 250 -c \\\"npm run test:e2e\\\"\"",
    "test:ui": "concurrently -n watch,ui -c blue,magenta \"npm run test:watch\" \"playwright test --ui\"",
    "e2e:install": "playwright install --with-deps",
    "dev": "cross-env PORT=3100 NODE_ENV=development DCA_DEV=true nodemon --watch src --watch server.js --ext js,json --ignore \"playwright-report/**\" --ignore \"test-results/**\" --ignore \"tests/**\" server.js",
    "start": "cross-env NODE_ENV=production node server.js",
    "build": "node ./scripts/build.js",
    "icons": "node ./scripts/generate-icons.js",
    "bump-sw": "node ./scripts/bump-sw-cache.js",
    "optimize-images": "node ./scripts/optimize-images.js",
    "predeploy": "npm run optimize-images && npm run build",
    "deploy": "echo \"Deploy by pushing to main branch - GitHub Actions will handle the rest\"",
    "clean": "node -e \"const fs=require('fs'); if(fs.existsSync('./dist')) fs.rmSync('./dist', {recursive:true, force:true}); console.log('Cleaned dist/ folder');\"",
    "clean:e2e": "node -e \"const fs=require('fs'); for (const p of ['playwright-report','test-results']) { if (fs.existsSync(p)) fs.rmSync(p, { recursive: true, force: true }); } console.log('Removed Playwright artifacts');\"",
    "clean:all": "npm run clean && npm run clean:e2e",
    "verify:git": "git status --porcelain=v1 && git ls-files --others --exclude-standard",
    "lint": "npm run lint:js && npm run lint:md",
    "lint:js": "eslint . --ext .js || exit 0",
    "lint:md": "markdownlint **/*.md --ignore node_modules --ignore dist || exit 0"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/mnichols08/drawer-count-app.git"
  },
  "keywords": [
    "pwa",
    "drawer-count",
    "calculator"
  ],
  "author": "Mikey Nichols",
  "license": "ISC",
  "bugs": {
    "url": "https://github.com/mnichols08/drawer-count-app/issues"
  },
  "homepage": "https://github.com/mnichols08/drawer-count-app#readme",
  "dependencies": {
    "cors": "^2.8.5",
    "dotenv": "^16.4.5",
    "express": "^4.19.2",
    "mongodb": "^6.9.0",
    "undici": "^6.19.8"
  },
  "devDependencies": {
    "@playwright/test": "^1.48.2",
    "@types/node": "^20.16.11",
    "chokidar-cli": "^3.0.0",
    "concurrently": "^9.0.1",
    "cross-env": "^10.0.0",
    "eslint": "^9.36.0",
    "favicons": "^7.2.0",
    "markdownlint-cli": "^0.45.0",
    "nodemon": "^3.1.10",
    "sharp": "^0.33.5",
    "wait-on": "^7.2.0"
  }
}
